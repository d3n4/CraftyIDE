<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>